apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}{{ .Values.canary.suffix }}
  labels:
    app: {{ .Values.service.name }}{{ .Values.canary.suffix }}
    version: {{ .Values.image.tag }}
    dot.de/service: {{ .Chart.Name }}
    dot.de/team: {{ .Values.team.name }}
    {{- if .Values.dynatrace.enabled }}
    AppName_Darwin: {{ .Values.dynatrace.labels.appNameDarwin }}
    Operation_Mode: {{ .Values.dynatrace.labels.operationMode }}
    AppNickName: "pomnewacquisitionmobileprocess"
    HUB: "MCCF"
    ICTO-ID: "ICTO-23553"
    IncidentAssignmentGroup: "TIT.CSO.SK.ONEAPPOPS" # need to change in future after getting
    NOR_Model: "DE3"
    OperationTeam: "TIT.CSO.SK.ONEAPPOPS"
    {{- end }}
  annotations:
    {{- if .Values.dynatrace.enabled }}
    AppName_Darwin: {{ .Values.dynatrace.annotations.appNameDarwin }}
    Operation_Mode: {{ .Values.dynatrace.annotations.operationMode }}
    AppNickName: "pomnewacquisitionmobileprocess"
    HUB: "MCCF"
    ICTO-ID: "ICTO-23553"
    IncidentAssignmentGroup: "TIT.CSO.SK.ONEAPPOPS" # need to change in future after getting
    NOR_Model: "DE3"
    OperationTeam: "TIT.CSO.SK.ONEAPPOPS"
    {{- end }}
    {{- if .Values.reloader.secrets.enabled }}
      {{- $str := "" }}
      {{- $last := sub (len .Values.reloader.secrets.list) 1 }}
      {{- range $key, $value := .Values.reloader.secrets.list }}
        {{- if ne $key $last }}
          {{- $str = print $str ( tpl $value $ ) ", " }}
        {{- else }}
          {{- $str = print $str ( tpl $value $ ) }}
        {{- end }}
      {{- end }}
    secret.reloader.stakater.com/reload: {{ $str }}
    {{- end }}
    {{- if .Values.reloader.configmaps.enabled }}
      {{- $str := "" }}
      {{- $last := sub (len .Values.reloader.configmaps.list) 1 }}
      {{- range $key, $value := .Values.reloader.configmaps.list }}
        {{- if ne $key $last }}
          {{- $str = print $str ( tpl $value $ ) ", " }}
        {{- else }}
          {{- $str = print $str ( tpl $value $ ) }}
        {{- end }}
      {{- end }}
    configmap.reloader.stakater.com/reload: {{ $str }}
    {{- end }}
spec:
  {{- if not .Values.keda.enabled }}
  replicas: {{ .Values.environment.replicas.quantity }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.service.name }}{{ .Values.canary.suffix }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}{{ .Values.canary.suffix }}
        version: {{ .Values.image.tag }}
        dot.de/service: {{ .Chart.Name }}
        dot.de/team: {{ .Values.team.name }}
        {{- if .Values.dynatrace.enabled }}
        AppName_Darwin: {{ .Values.dynatrace.labels.appNameDarwin }}
        Operation_Mode: {{ .Values.dynatrace.labels.operationMode }}
        AppNickName: "pomnewacquisitionmobileprocess"
        HUB: "MCCF"
        ICTO-ID: "ICTO-23553"
        IncidentAssignmentGroup: "TIT.CSO.SK.ONEAPPOPS"
        NOR_Model: "DE3"
        OperationTeam: "TIT.CSO.SK.ONEAPPOPS"
        {{- end }}
      annotations:
        {{- if .Values.dynatrace.enabled }}
        AppName_Darwin: {{ .Values.dynatrace.annotations.appNameDarwin }}
        Operation_Mode: {{ .Values.dynatrace.annotations.operationMode }}
        AppNickName: "pomnewacquisitionmobileprocess"
        HUB: "MCCF"
        ICTO-ID: "ICTO-23553"
        IncidentAssignmentGroup: "TIT.CSO.SK.ONEAPPOPS"
        NOR_Model: "DE3"
        OperationTeam: "TIT.CSO.SK.ONEAPPOPS"
        oneagent.dynatrace.com/flavor: default
        {{- end }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.sa.name }}{{ .Values.canary.suffix }}
      {{- end }}
      {{- if .Values.pullsecret.enabled }}
      imagePullSecrets:
        - name: {{ .Values.pullsecret.name }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ .Values.service.name }}{{ .Values.canary.suffix }}
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Values.service.name }}{{ .Values.canary.suffix }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
      {{- if .Values.dynatrace.oneagent.enabled }}
      initContainers:
        - name: install-oneagent
          image: alpine:latest
          command:
          - /bin/sh
          args:
          - -c
          - ARCHIVE=$(mktemp) && wget -O $ARCHIVE "$DT_API_URL/v1/deployment/installer/agent/unix/paas/latest?Api-Token=$DT_PAAS_TOKEN&$DT_ONEAGENT_OPTIONS" && unzip -o -d /opt/dynatrace/oneagent $ARCHIVE && rm -f $ARCHIVE
          env:
          - name: DT_API_URL
            value: https://{{ .Values.dynatrace.clientId }}.live.dynatrace.com/api
          - name: DT_PAAS_TOKEN
            value: {{ .Values.dynatrace.paasToken }}
          - name: DT_ONEAGENT_OPTIONS
            value: flavor=musl&include=java
          volumeMounts:
          - mountPath: /opt/dynatrace/oneagent
            name: oneagent
      {{- end }}
      containers:
        - name: {{ .Values.service.name }}{{ .Values.canary.suffix }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          envFrom:
          {{- if .Values.secretstore.enabled }}
            - secretRef:
                name: {{ .Values.secret.name }}{{ .Values.canary.suffix }}
          {{- end }}
            - configMapRef:
                name: {{ .Values.service.name }}-configmap{{ .Values.canary.suffix }}
          env:
            - name: NAMESPACE_NAME
              valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            - name: TRACING_ENABLED
              value: {{ .Values.tracing.enabled | quote }}
            - name: TRACING_PROBABILITY
              value: {{ .Values.tracing.sampling.probability | quote }}
            - name: TRACING_COLLECTOR_URL
              value: {{ .Values.zipkin.tracing.endpoint | quote }}
            - name: ENVIRONMENT_NAME
              value: {{ .Values.environment.name }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          {{- if .Values.image.debug.enabled }}
            - name: debugger
              containerPort: {{ .Values.image.debug.port }}
          {{- end}}
          volumeMounts:
            - name: {{ .Values.service.name }}-config-volume
              mountPath: /config
              readOnly: true
          livenessProbe:
            httpGet:
              path: /new-mobile-acquisition/v1/actuator/health/livenessState
              port: http
            initialDelaySeconds: 30
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /new-mobile-acquisition/v1/actuator/health/readinessState
              port: http
            initialDelaySeconds: 30
            failureThreshold: 5
            periodSeconds: 5
          resources:
            requests:
              memory: {{ .Values.environment.resources.requests.memory }}
              cpu: {{ .Values.environment.resources.requests.cpu }}
            limits:
              memory: {{ .Values.environment.resources.limits.memory }}
              cpu: {{ .Values.environment.resources.limits.cpu }}
      volumes:
        - name: {{ .Values.service.name }}-config-volume
          configMap:
            name: {{ .Values.service.name }}-configmap{{ .Values.canary.suffix }}
      restartPolicy: {{ .Values.image.restartPolicy }}
